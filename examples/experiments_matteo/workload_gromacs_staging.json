
# ------------------------------------------------------------------------------
#
# workload_gromacs.json
#
# This file defines a simple gromacs workload, i.e. a number of gromacs tasks
# with input and output staging.
#
# cardinality: 
#     the task is run that many times all string based values will be expanded
#     with matching values from the application config.  
#
#     For example, if the application config sets 
#         "bag_size"    : 10
#     then 
#         "cardinality" : "%(bag_size)s"
#     will expand to 
#         "cardinality" : "10"
#
#     The placeholder "%(cardinal)s" will expand to the sequential task number
#     (0..9 in our example).
#
# Other placeholders will be expanded depending on the resource the task will
# land on, such as "%(username)s", "%(mdrun)s" or "%(home)".   Note that the
# mdrun location is set in "config_application.json".
#
# Note that the output data will be stored in `output`, relative to pwd.
#
#
# DATA_HACK: we introduce a separate data stager task, to share the staged 
# input file for all tasks (its only staged once this way).  This will break 
# if an overlay spans multiple resources...
#


{
  "tasks" : [
    {
      "tag"               : "stager",
      "cardinality"       : 2, # this is the number of resources we need to 
                               # stage to -- will only work like magic for the 
                               # round-robin unit scheduler.
      "executable"        : "true",
      "walltime"          : 1,
      "working_directory" : "%(home)s/radical_owms_tutorial/",
      "inputs"            : ["input/topol.tpr > topol.tpr"]
    },
    {
      "tag"               : "worker",
      "cardinality"       : "%(bag_size)s",
      "executable"        : "/bin/sh",
      "walltime"          : 1,
      "arguments"         : ["-c", "cd %(working_directory)s && ln -s ../topol.tpr . && %(mdrun)s"],
      "working_directory" : "%(home)s/radical_owms_tutorial/radical_owms_tutorial_01_%(cardinal)s/",
      "outputs"           : ["output/%(session_id)s_state.cpt.%(cardinal)s   < state.cpt",
                             "output/%(session_id)s_confout.gro.%(cardinal)s < confout.gro",
                             "output/%(session_id)s_ener.edr.%(cardinal)s    < ener.edr",
                             "output/%(session_id)s_traj.trr.%(cardinal)s    < traj.trr",
                             "output/%(session_id)s_md.log.%(cardinal)s      < md.log"]
    }
  ], 
  "relations" : [
    {
        "head"           : "stager",
        "tail"           : "worker",
        "relation_time"  : "SEQUENTIAL_END",
        "relation_space" : ""
    }
  ]
}

